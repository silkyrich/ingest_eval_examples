# This is for the example where we have conflicting date time formats on a single sourcetype
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/conflicting_datetime_formats/mutliplexed_datetime_formats.log]
disabled = 0
sourcetype = conflicting_datetime_formats
index = ingest_eval_examples_2

# This input is for the compound data example where the file name has the datestamp, but the files have the timestamp per line
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/compound_datetimes/*]
disabled = 0
sourcetype = compound_datetimes
index = ingest_eval_examples_1

# this input is for the dropped columns example 
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/drop_indexed_fields/useless_columns.csv]
disabled = 0
sourcetype = drop_indexed_fields
index = ingest_eval_examples_1

# this input is for the data input example
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/load_into_indexes/encoded_splunk_events.csv]
disabled = 0
sourcetype = load_into_indexes
index = ingest_eval_examples_2
# This will be overwriten on loading
index = detritus

# this input for the automatic indexed field creation example
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/auto_extract_indexed_fields/indexed.log]
disabled = 0
sourcetype = auto_extract_indexed_fields
index = ingest_eval_examples_2

# this example is to demonstrate how split forwarding can work with random()
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/split_forwarding/simple_events.log]
disabled = 0
sourcetype = split_forwarding
index=ingest_eval_examples_2
# This will be not forwarded instead of being sent to the index, then it will be overwritten as it comes back in

# this example is to demonstate splunk enrich of splunk log with component, log_level and thread information
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/enrich_splunkd_component_level_thread/multi_log_formats.log]
disabled = 0
sourcetype = enrich_splunkd_component_level_thread
index=ingest_eval_examples_1

# this example is simluar to the splunkd_access.log
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/enrich_splunkd_access_log/enrich_splunkd_access.log]
disabled = 0
sourcetype = enrich_splunkd_access_log
index=ingest_eval_examples_2

# this example is simluar to the splunkd_access.log
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/shard_data_with_splitbyindexkeys/shard_splunkd.log]
disabled = 0
sourcetype = shard_data_with_splitbyindexkeys_import
index=ingest_eval_examples_2

# this example is for mask_and_clone
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/mask_and_clone/insecurity.log]
disabled = 0
sourcetype = mask_and_clone
index=ingest_eval_examples_1

# this example is for mask_data_and_map
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/mask_data_and_map/insecurity.log]
disabled = 0
sourcetype = mask_data_and_map
index=ingest_eval_examples_2

# this example is for name_clash
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/name_clash/naughty_zoom_host.log]
disabled = 0
sourcetype = name_clash
index=ingest_eval_examples_1

# this example is for json_docker
[monitor://$SPLUNK_HOME/etc/apps/ingest_eval_examples/appserver/static/sample_data/json_logging/json_docker.log]
disabled = 0
sourcetype = json_docker
index=ingest_eval_examples_1

# this is required for the split ingestion example
[splunktcp:9991]
# we can use the _meta field to denote which port the event was recieved
_meta=input_stanza::"splunktcp::9991"
sourcetype=split_forwarding_recieved
index = ingest_eval_examples_2
acceptFrom = 127.0.0.1
# lets route all this data to nullQueue
route = has_key:_replicationBucketUUID:nullQueue;has_key:_dstrx:nullQueue;has_key:_linebreaker:nullQueue;absent_key:_linebreaker:nullQueue

# this is required for the split ingestion example
[splunktcp:9992]
# we can use the _meta field to denote which port the event was recieved
_meta=input_stanza::"splunktcp::9992"
sourcetype=split_forwarding_recieved
index = ingest_eval_examples_2
acceptFrom = 127.0.0.1
# lets route all this data to nullQueue
route = has_key:_replicationBucketUUID:nullQueue;has_key:_dstrx:nullQueue;has_key:_linebreaker:nullQueue;absent_key:_linebreaker:nullQueue


